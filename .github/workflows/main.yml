---
name: Test Terraform
concurrency: test_terraform

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  id-token: write
  contents: read

env:
  TF_INPUT: 'false'
  TF_IN_AUTOMATION: 'true'
  RESOURCE_GROUP_NAME: ${{vars.RESOURCE_GROUP_NAME}}
  AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
  AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
  AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}

jobs:
  main:
    name: Test Terraform
    runs-on: ubuntu-latest
    environment: azure
    steps:
      - name: Checkout self
        uses: actions/checkout@v3
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ env.AZURE_CLIENT_ID }}
          tenant-id: ${{ env.AZURE_TENANT_ID }}
          subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}
      - name: Check Format
        shell: bash
        run: |
          terraform fmt -recursive -check
      - name: Init
        shell: bash
        run: |
          terraform init
      - name: Validate
        shell: bash
        run: |
          terraform validate
      - name: Plan
        shell: bash
        run: |
          terraform plan -out tfplan \
          -var "resource_group_name=${RESOURCE_GROUP_NAME}" \
          -var "suffix=partest"
      - name: Create Job Summary
        shell: bash
        run: |
          {
            echo "<details>"
            echo "<summary>Terraform Plan</summary>"
            echo
            echo "\`\`\`console"
            terraform show -no-color tfplan
            echo "\`\`\`"
            echo
            echo "</details>"
          } >> "$GITHUB_STEP_SUMMARY"
